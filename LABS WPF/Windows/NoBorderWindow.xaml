<Window x:Name="window" x:Class="LABS_WPF.Windows.NoBorderWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:LABS_WPF.Windows"
		mc:Ignorable="d"
		Title="NoBorderWindow" Height="450" Width="800" WindowStyle="None" StateChanged="window_StateChanged" Background="Transparent" AllowsTransparency="True" Loaded="window_Loaded">
	<WindowChrome.WindowChrome>
		<WindowChrome CaptionHeight="50" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
	</WindowChrome.WindowChrome>

	<Window.Resources>
		<Style x:Key="WindowMainPanelStyle" TargetType="{x:Type Border}">
			<Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrush}" />
			<Setter Property="BorderThickness" Value="1" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
					<Setter Property="Margin" Value="6" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="TitleBarButtonStyle" TargetType="Button">
			<Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
			<Setter Property="IsTabStop" Value="False" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
							<ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverOverlayBackgroundBrush}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="border" Property="Background" Value="{DynamicResource PressedOverlayBackgroundBrush}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
			<Setter Property="IsTabStop" Value="False" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
							<ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverWindowCloseButtonBackgroundBrush}" />
								<Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="border" Property="Background" Value="{DynamicResource PressedWindowCloseButtonBackgroundBrush}" />
								<Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
		<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
		<SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
		<Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="5" Margin="0,0,-38.4,0">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Opacity" TargetName="border" Value="0.56"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
						<Condition Property="IsSelectionActive" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
				</MultiTrigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>

	<Window.Effect>
		<DropShadowEffect ShadowDepth="0" Opacity="0.6" BlurRadius="30"/>
	</Window.Effect>

	<Border BorderThickness="0" Background="White" CornerRadius="5 5 0 0">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="50"/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Border BorderThickness="0" Style="{StaticResource WindowMainPanelStyle}">
				<Grid Height="50" VerticalAlignment="Top">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Rectangle Fill="White" Grid.ColumnSpan="5" RadiusX="5" RadiusY="5">
						<Rectangle.Effect>
							<DropShadowEffect BlurRadius="20" Opacity="0.2" ShadowDepth="0"/>
						</Rectangle.Effect>
					</Rectangle>

					<Image
		Grid.Column="0"
		Width="22"
		Height="22"
		Margin="4"
		Source="Logo.png" />
					<TextBlock
		Grid.Column="1"
		Margin="4 0 0 0"
		VerticalAlignment="Center"
		FontSize="14"
		Text="NoBorderWindow">
						<TextBlock.Style>
							<Style TargetType="TextBlock">
								<Style.Triggers>
									<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
										<Setter Property="Foreground" Value="{DynamicResource WindowTitleBarInactiveText}" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>

					<Button
		Grid.Column="2"
		Click="Button_Click"
		RenderOptions.EdgeMode="Aliased"
		Style="{StaticResource TitleBarButtonStyle}">
						<Path
			Width="46"
			Height="32"
			Data="M 18,15 H 28"
			Stroke="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			StrokeThickness="1" />
					</Button>
					<Button
		Name="maximizeButton"
		Grid.Column="3"
		Click="maximizeButton_Click"
		Style="{StaticResource TitleBarButtonStyle}">
						<Path
			Width="46"
			Height="32"
			Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z"
			Stroke="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			StrokeThickness="1" />
					</Button>
					<Button
		Name="restoreButton"
		Grid.Column="3"
		Click="restoreButton_Click"
		Style="{StaticResource TitleBarButtonStyle}">
						<Path
			Width="46"
			Height="32"
			Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5"
			Stroke="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			StrokeThickness="1" />
					</Button>
					<Button
		Grid.Column="4"
		Click="Button_Click_1"
		Style="{StaticResource TitleBarCloseButtonStyle}">
						<Path
			Width="46"
			Height="32"
			Data="M 18,11 27,20 M 18,20 27,11"
			Stroke="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			StrokeThickness="1" />
					</Button>
				</Grid>
			</Border>
			<StackPanel VerticalAlignment="Top" Grid.Row="1">
				<TextBox Width="60" Margin="5" Style="{DynamicResource TextBoxStyle1}" Height="24" HorizontalAlignment="Left"></TextBox>
				<PasswordBox x:Name="PasswordTxt"  Width="60" Height="24" Margin="5" HorizontalAlignment="Left"/>
				<Button x:Name="ShowPwrBtn" Padding="5" Content="Show Password" Click="Button_Click_2" HorizontalAlignment="Center">
					<Button.Background>
						<SolidColorBrush x:Name="MyAnimatedBrush" Color="Green"/>
					</Button.Background>
					<Button.Triggers>
						<EventTrigger RoutedEvent="Button.MouseEnter">
							<BeginStoryboard>
								<Storyboard>

									<ColorAnimationUsingKeyFrames
				Storyboard.TargetProperty="Color"
				Storyboard.TargetName="MyAnimatedBrush"
				Duration="0:0:1" FillBehavior="HoldEnd">
										<ColorAnimationUsingKeyFrames.KeyFrames>

											<LinearColorKeyFrame Value="White" KeyTime="0:0:0" />
											<LinearColorKeyFrame Value="Blue" KeyTime="0:0:1" />

																				</ColorAnimationUsingKeyFrames.KeyFrames>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</Button.Triggers>
				</Button>

				<Image Source="https://media.rawg.io/media/achievements/26e/26eabbf2e0b0b0f450cfd04dff816756.jpg" x:Name="img1" Width="50" Height="50" HorizontalAlignment="Left"/>
				<ComboBox x:Name="Combobox" GotFocus="Combobox_GotFocus" IsTextSearchEnabled="True" IsEditable="True"/>

				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>

					<Grid Grid.Column="0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Button Content="Button" Padding="10"/>
						<GridSplitter HorizontalAlignment="Center"   
					  VerticalAlignment="Stretch"   
					  Grid.Column="1" Grid.Row="0"   
					  Grid.RowSpan="3" Width="4" Background="Black">
						</GridSplitter>
					</Grid>
					
					<Grid Grid.Column="1">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Button Content="Button" Padding="10"/>
						<GridSplitter HorizontalAlignment="Center"   
					  VerticalAlignment="Stretch"   
					  Grid.Column="1" Grid.Row="0"   
					  Grid.RowSpan="3" Width="4" Background="Black">
						</GridSplitter>					</Grid>
					<Grid Grid.Column="2">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Button Content="Button" Padding="10"/>
						<GridSplitter HorizontalAlignment="Center"   
					  VerticalAlignment="Stretch"   
					  Grid.Column="1" Grid.Row="0"   
					  Grid.RowSpan="3" Width="4" Background="Black">
						</GridSplitter>					</Grid>
					<Grid Grid.Column="3">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Button Content="Button" Padding="10"/>
						<GridSplitter HorizontalAlignment="Center"   
					  VerticalAlignment="Stretch"   
					  Grid.Column="1" Grid.Row="0"   
					  Grid.RowSpan="3" Width="4" Background="Black">
						</GridSplitter>					</Grid>
				</Grid>
				<Expander Style="{DynamicResource ExpanderStyle1}" Margin="10,10,10,0" Background="#FFEDEDED">
					<Expander.Header>
						<StackPanel Margin="10 15" Orientation="Horizontal">
							<TextBlock Text="&#xF4F4;" FontSize="16" FontFamily="..\Fonts\#FluentSystemIcons-Regular" VerticalAlignment="Center"/>
                            <StackPanel>
                                <TextBlock Text="Language" FontSize="16" VerticalAlignment="Center" FontWeight="Bold" Margin="10,0,0,0"/>
                                <TextBlock Text="Lorem ipsum dolor sit amet, consectetur." FontSize="11" VerticalAlignment="Center" Margin="10,0,0,0" TextWrapping="Wrap"/>
                            </StackPanel>
                        </StackPanel>
					</Expander.Header>
					<StackPanel Margin="5 10">
						<TextBlock Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum." FontSize="11" VerticalAlignment="Center" Margin="10,0,0,0" TextWrapping="Wrap"/>
					</StackPanel>
				</Expander>
			</StackPanel>
		</Grid>
	</Border>
</Window>
